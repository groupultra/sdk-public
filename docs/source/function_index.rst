.. _function_index:

Exhaustive list of all methods and module-level functions
==================

* :ref:`moobius.quickstart.open_folder_in_explorer <moobius.quickstart.open_folder_in_explorer>` (folder_path)
* :ref:`moobius.quickstart.download_text_file_to_string <moobius.quickstart.download_text_file_to_string>` (url)
* :ref:`moobius.quickstart.create_channel <moobius.quickstart.create_channel>` (email, password, url)
* :ref:`moobius.quickstart.save <moobius.quickstart.save>` (fname, x)
* :ref:`moobius.quickstart._get_boxes <moobius.quickstart._get_boxes>` ()
* :ref:`moobius.quickstart.submit <moobius.quickstart.submit>` (out)
* :ref:`moobius.quickstart.make_box <moobius.quickstart.make_box>` (root, name, detailed_name, default, options)
* :ref:`moobius.quickstart.save_starter_ccs <moobius.quickstart.save_starter_ccs>` ()
* :ref:`moobius.quickstart.save_starter_ccs._folder_button_callback <moobius.quickstart.save_starter_ccs._folder_button_callback>` (\*kwargs)
* :ref:`moobius.types.add_str_method <moobius.types.add_str_method>` (cls)
* :ref:`moobius.types.add_str_method.__str__ <moobius.types.add_str_method.__str__>` (self)
* :ref:`moobius.utils.summarize_html <moobius.utils.summarize_html>` (html_str)
* :ref:`moobius.utils.make_fn_async <moobius.utils.make_fn_async>` (f)
* :ref:`moobius.utils.maybe_make_template_files <moobius.utils.maybe_make_template_files>` (args)
* :ref:`moobius.utils.to_char_id_list <moobius.utils.to_char_id_list>` (c)
* :ref:`moobius.utils.set_terminal_logger_level <moobius.utils.set_terminal_logger_level>` (the_level)
* :ref:`moobius.utils.EnhancedJSONEncoder.default <moobius.utils.EnhancedJSONEncoder.default>` (self, o)
* :ref:`moobius.utils.EnhancedJSONEncoder.__str__ <moobius.utils.EnhancedJSONEncoder.__str__>` (self)
* :ref:`moobius.utils.EnhancedJSONEncoder.__repr__ <moobius.utils.EnhancedJSONEncoder.__repr__>` (self)
* :ref:`moobius.utils.make_fn_async.run_f <moobius.utils.make_fn_async.run_f>` (\*kwargs)
* :ref:`moobius.utils.make_fn_async.run_f.f1 <moobius.utils.make_fn_async.run_f.f1>` ()
* :ref:`moobius.core.sdk.ServiceGroupLib.__init__ <moobius.core.sdk.ServiceGroupLib.__init__>` (self)
* :ref:`moobius.core.sdk.ServiceGroupLib.convert_list <moobius.core.sdk.ServiceGroupLib.convert_list>` (self, http_api, character_ids, is_message_down, channel_id)
* :ref:`moobius.core.sdk.Moobius.__init__ <moobius.core.sdk.Moobius.__init__>` (self, config_path, db_config_path, is_agent, \*kwargs)
* :ref:`moobius.core.sdk.Moobius.start <moobius.core.sdk.Moobius.start>` (self)
* :ref:`moobius.core.sdk.Moobius.agent_join_service_channels <moobius.core.sdk.Moobius.agent_join_service_channels>` (self, service_config_fname)
* :ref:`moobius.core.sdk.Moobius.fetch_service_id_each_channel <moobius.core.sdk.Moobius.fetch_service_id_each_channel>` (self)
* :ref:`moobius.core.sdk.Moobius.fetch_bound_channels <moobius.core.sdk.Moobius.fetch_bound_channels>` (self)
* :ref:`moobius.core.sdk.Moobius.fetch_characters <moobius.core.sdk.Moobius.fetch_characters>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.limit_len <moobius.core.sdk.Moobius.limit_len>` (self, txt, n)
* :ref:`moobius.core.sdk.Moobius._convert_message_content <moobius.core.sdk.Moobius._convert_message_content>` (self, subtype, content)
* :ref:`moobius.core.sdk.Moobius.send_message <moobius.core.sdk.Moobius.send_message>` (self, the_message, channel_id, sender, recipients, subtype, len_limit, file_display_name)
* :ref:`moobius.core.sdk.Moobius.send <moobius.core.sdk.Moobius.send>` (self, payload_type, payload_body)
* :ref:`moobius.core.sdk.Moobius.send_button_click <moobius.core.sdk.Moobius.send_button_click>` (self, channel_id, button_id, button_args)
* :ref:`moobius.core.sdk.Moobius.send_heartbeat <moobius.core.sdk.Moobius.send_heartbeat>` (self)
* :ref:`moobius.core.sdk.Moobius.create_channel <moobius.core.sdk.Moobius.create_channel>` (self, channel_name, channel_desc, bind)
* :ref:`moobius.core.sdk.Moobius.send_update_canvas <moobius.core.sdk.Moobius.send_update_canvas>` (self, channel_id, canvas_elements, recipients)
* :ref:`moobius.core.sdk.Moobius._update_rec <moobius.core.sdk.Moobius._update_rec>` (self, recipients, is_m_down, channel_id)
* :ref:`moobius.core.sdk.Moobius.refresh <moobius.core.sdk.Moobius.refresh>` (self)
* :ref:`moobius.core.sdk.Moobius.authenticate <moobius.core.sdk.Moobius.authenticate>` (self)
* :ref:`moobius.core.sdk.Moobius.sign_up <moobius.core.sdk.Moobius.sign_up>` (self)
* :ref:`moobius.core.sdk.Moobius.sign_out <moobius.core.sdk.Moobius.sign_out>` (self)
* :ref:`moobius.core.sdk.Moobius.update_current_user <moobius.core.sdk.Moobius.update_current_user>` (self, avatar, description, name)
* :ref:`moobius.core.sdk.Moobius.update_character <moobius.core.sdk.Moobius.update_character>` (self, character_id, avatar, description, name)
* :ref:`moobius.core.sdk.Moobius.update_channel <moobius.core.sdk.Moobius.update_channel>` (self, channel_id, channel_name, channel_desc)
* :ref:`moobius.core.sdk.Moobius.bind_service_to_channel <moobius.core.sdk.Moobius.bind_service_to_channel>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.unbind_service_from_channel <moobius.core.sdk.Moobius.unbind_service_from_channel>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.create_puppet <moobius.core.sdk.Moobius.create_puppet>` (self, name, avatar, description)
* :ref:`moobius.core.sdk.Moobius.fetch_popular_channels <moobius.core.sdk.Moobius.fetch_popular_channels>` (self)
* :ref:`moobius.core.sdk.Moobius.fetch_channel_list <moobius.core.sdk.Moobius.fetch_channel_list>` (self)
* :ref:`moobius.core.sdk.Moobius.fetch_member_ids <moobius.core.sdk.Moobius.fetch_member_ids>` (self, channel_id, raise_empty_list_err)
* :ref:`moobius.core.sdk.Moobius.fetch_member_profile <moobius.core.sdk.Moobius.fetch_member_profile>` (self, character_id)
* :ref:`moobius.core.sdk.Moobius.fetch_service_id_list <moobius.core.sdk.Moobius.fetch_service_id_list>` (self)
* :ref:`moobius.core.sdk.Moobius.fetch_puppets <moobius.core.sdk.Moobius.fetch_puppets>` (self)
* :ref:`moobius.core.sdk.Moobius.upload_file <moobius.core.sdk.Moobius.upload_file>` (self, filepath)
* :ref:`moobius.core.sdk.Moobius.download_file <moobius.core.sdk.Moobius.download_file>` (self, url, filepath, assert_no_overwrite, headers)
* :ref:`moobius.core.sdk.Moobius.fetch_message_history <moobius.core.sdk.Moobius.fetch_message_history>` (self, channel_id, limit, before)
* :ref:`moobius.core.sdk.Moobius.create_channel_group <moobius.core.sdk.Moobius.create_channel_group>` (self, channel_id, group_name, members)
* :ref:`moobius.core.sdk.Moobius.create_service_group <moobius.core.sdk.Moobius.create_service_group>` (self, group_id, members)
* :ref:`moobius.core.sdk.Moobius.character_ids_of_channel_group <moobius.core.sdk.Moobius.character_ids_of_channel_group>` (self, sender_id, channel_id, group_id)
* :ref:`moobius.core.sdk.Moobius.character_ids_of_service_group <moobius.core.sdk.Moobius.character_ids_of_service_group>` (self, group_id)
* :ref:`moobius.core.sdk.Moobius.update_channel_group <moobius.core.sdk.Moobius.update_channel_group>` (self, channel_id, group_id, members)
* :ref:`moobius.core.sdk.Moobius.update_temp_channel_group <moobius.core.sdk.Moobius.update_temp_channel_group>` (self, channel_id, members)
* :ref:`moobius.core.sdk.Moobius.fetch_channel_temp_group <moobius.core.sdk.Moobius.fetch_channel_temp_group>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.fetch_channel_group_list <moobius.core.sdk.Moobius.fetch_channel_group_list>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.fetch_user_from_group <moobius.core.sdk.Moobius.fetch_user_from_group>` (self, user_id, channel_id, group_id)
* :ref:`moobius.core.sdk.Moobius.fetch_target_group <moobius.core.sdk.Moobius.fetch_target_group>` (self, user_id, channel_id, group_id)
* :ref:`moobius.core.sdk.Moobius.send_agent_login <moobius.core.sdk.Moobius.send_agent_login>` (self)
* :ref:`moobius.core.sdk.Moobius.send_service_login <moobius.core.sdk.Moobius.send_service_login>` (self)
* :ref:`moobius.core.sdk.Moobius.send_update <moobius.core.sdk.Moobius.send_update>` (self, target_client_id, data)
* :ref:`moobius.core.sdk.Moobius.send_update_character_list <moobius.core.sdk.Moobius.send_update_character_list>` (self, channel_id, character_list, recipients)
* :ref:`moobius.core.sdk.Moobius.send_update_channel_info <moobius.core.sdk.Moobius.send_update_channel_info>` (self, channel_id, channel_info)
* :ref:`moobius.core.sdk.Moobius.send_update_buttons <moobius.core.sdk.Moobius.send_update_buttons>` (self, channel_id, buttons, recipients)
* :ref:`moobius.core.sdk.Moobius.send_update_context_menu <moobius.core.sdk.Moobius.send_update_context_menu>` (self, channel_id, menu_elements, recipients)
* :ref:`moobius.core.sdk.Moobius.send_update_style <moobius.core.sdk.Moobius.send_update_style>` (self, channel_id, style_content, recipients)
* :ref:`moobius.core.sdk.Moobius.send_fetch_characters <moobius.core.sdk.Moobius.send_fetch_characters>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.send_fetch_buttons <moobius.core.sdk.Moobius.send_fetch_buttons>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.send_fetch_style <moobius.core.sdk.Moobius.send_fetch_style>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.send_fetch_canvas <moobius.core.sdk.Moobius.send_fetch_canvas>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.send_fetch_channel_info <moobius.core.sdk.Moobius.send_fetch_channel_info>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.send_join_channel <moobius.core.sdk.Moobius.send_join_channel>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.send_leave_channel <moobius.core.sdk.Moobius.send_leave_channel>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.checkin <moobius.core.sdk.Moobius.checkin>` (self)
* :ref:`moobius.core.sdk.Moobius.listen_loop <moobius.core.sdk.Moobius.listen_loop>` (self)
* :ref:`moobius.core.sdk.Moobius.handle_received_payload <moobius.core.sdk.Moobius.handle_received_payload>` (self, payload)
* :ref:`moobius.core.sdk.Moobius.on_action <moobius.core.sdk.Moobius.on_action>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_update <moobius.core.sdk.Moobius.on_update>` (self, update)
* :ref:`moobius.core.sdk.Moobius.on_start <moobius.core.sdk.Moobius.on_start>` (self)
* :ref:`moobius.core.sdk.Moobius.initialize_channel <moobius.core.sdk.Moobius.initialize_channel>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.checkin_channel <moobius.core.sdk.Moobius.checkin_channel>` (self, channel_id)
* :ref:`moobius.core.sdk.Moobius.on_spell <moobius.core.sdk.Moobius.on_spell>` (self, obj)
* :ref:`moobius.core.sdk.Moobius.on_message_up <moobius.core.sdk.Moobius.on_message_up>` (self, message_up)
* :ref:`moobius.core.sdk.Moobius.on_fetch_buttons <moobius.core.sdk.Moobius.on_fetch_buttons>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_fetch_characters <moobius.core.sdk.Moobius.on_fetch_characters>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_fetch_canvas <moobius.core.sdk.Moobius.on_fetch_canvas>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_fetch_context_menu <moobius.core.sdk.Moobius.on_fetch_context_menu>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_fetch_channel_info <moobius.core.sdk.Moobius.on_fetch_channel_info>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_copy_client <moobius.core.sdk.Moobius.on_copy_client>` (self, copy)
* :ref:`moobius.core.sdk.Moobius.on_join_channel <moobius.core.sdk.Moobius.on_join_channel>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_leave_channel <moobius.core.sdk.Moobius.on_leave_channel>` (self, action)
* :ref:`moobius.core.sdk.Moobius.on_button_click <moobius.core.sdk.Moobius.on_button_click>` (self, button_click)
* :ref:`moobius.core.sdk.Moobius.on_context_menu_click <moobius.core.sdk.Moobius.on_context_menu_click>` (self, context_click)
* :ref:`moobius.core.sdk.Moobius.on_unknown_payload <moobius.core.sdk.Moobius.on_unknown_payload>` (self, payload)
* :ref:`moobius.core.sdk.Moobius.on_message_down <moobius.core.sdk.Moobius.on_message_down>` (self, message_down)
* :ref:`moobius.core.sdk.Moobius.on_update_characters <moobius.core.sdk.Moobius.on_update_characters>` (self, update)
* :ref:`moobius.core.sdk.Moobius.on_update_channel_info <moobius.core.sdk.Moobius.on_update_channel_info>` (self, update)
* :ref:`moobius.core.sdk.Moobius.on_update_canvas <moobius.core.sdk.Moobius.on_update_canvas>` (self, update)
* :ref:`moobius.core.sdk.Moobius.on_update_buttons <moobius.core.sdk.Moobius.on_update_buttons>` (self, update)
* :ref:`moobius.core.sdk.Moobius.on_update_style <moobius.core.sdk.Moobius.on_update_style>` (self, update)
* :ref:`moobius.core.sdk.Moobius.on_update_context_menu <moobius.core.sdk.Moobius.on_update_context_menu>` (self, update)
* :ref:`moobius.core.sdk.Moobius.__str__ <moobius.core.sdk.Moobius.__str__>` (self)
* :ref:`moobius.core.sdk.Moobius.__repr__ <moobius.core.sdk.Moobius.__repr__>` (self)
* :ref:`moobius.core.sdk.Moobius.send_message._get_file_message_content <moobius.core.sdk.Moobius.send_message._get_file_message_content>` (filepath, file_display_name, subtype)
* :ref:`moobius.core.sdk.Moobius.handle_received_payload._group2ids <moobius.core.sdk.Moobius.handle_received_payload._group2ids>` (g_id)
* :ref:`moobius.core.sdk.Moobius.start._get_agent_info <moobius.core.sdk.Moobius.start._get_agent_info>` ()
* :ref:`moobius.core.sdk.Moobius.handle_received_payload._make_elem <moobius.core.sdk.Moobius.handle_received_payload._make_elem>` (d)
* :ref:`moobius.core.wand.sigint_handler <moobius.core.wand.sigint_handler>` (signal, frame)
* :ref:`moobius.core.wand.MoobiusWand.__init__ <moobius.core.wand.MoobiusWand.__init__>` (self)
* :ref:`moobius.core.wand.MoobiusWand.run_job <moobius.core.wand.MoobiusWand.run_job>` (service)
* :ref:`moobius.core.wand.MoobiusWand.run <moobius.core.wand.MoobiusWand.run>` (self, cls, background, \*kwargs)
* :ref:`moobius.core.wand.MoobiusWand.stop_all <moobius.core.wand.MoobiusWand.stop_all>` (self, force_exit)
* :ref:`moobius.core.wand.MoobiusWand.spell <moobius.core.wand.MoobiusWand.spell>` (self, handle, obj)
* :ref:`moobius.core.wand.MoobiusWand.aspell <moobius.core.wand.MoobiusWand.aspell>` (self, handle, obj)
* :ref:`moobius.core.wand.MoobiusWand.__str__ <moobius.core.wand.MoobiusWand.__str__>` (self)
* :ref:`moobius.core.wand.MoobiusWand.__repr__ <moobius.core.wand.MoobiusWand.__repr__>` (self)
* :ref:`moobius.database.database_interface.DatabaseInterface.__init__ <moobius.database.database_interface.DatabaseInterface.__init__>` (self, domain, \*kwargs)
* :ref:`moobius.database.database_interface.DatabaseInterface.get_value <moobius.database.database_interface.DatabaseInterface.get_value>` (self, key)
* :ref:`moobius.database.database_interface.DatabaseInterface.set_value <moobius.database.database_interface.DatabaseInterface.set_value>` (self, key, value)
* :ref:`moobius.database.database_interface.DatabaseInterface.delete_key <moobius.database.database_interface.DatabaseInterface.delete_key>` (self, key)
* :ref:`moobius.database.database_interface.DatabaseInterface.all_keys <moobius.database.database_interface.DatabaseInterface.all_keys>` (self)
* :ref:`moobius.database.database_interface.DatabaseInterface.__str__ <moobius.database.database_interface.DatabaseInterface.__str__>` (self)
* :ref:`moobius.database.database_interface.DatabaseInterface.__repr__ <moobius.database.database_interface.DatabaseInterface.__repr__>` (self)
* :ref:`moobius.database.json_database.JSONDatabase.__init__ <moobius.database.json_database.JSONDatabase.__init__>` (self, domain, root_dir, \*kwargs)
* :ref:`moobius.database.json_database.JSONDatabase.get_value <moobius.database.json_database.JSONDatabase.get_value>` (self, key)
* :ref:`moobius.database.json_database.JSONDatabase.set_value <moobius.database.json_database.JSONDatabase.set_value>` (self, key, value)
* :ref:`moobius.database.json_database.JSONDatabase.delete_key <moobius.database.json_database.JSONDatabase.delete_key>` (self, key)
* :ref:`moobius.database.json_database.JSONDatabase.all_keys <moobius.database.json_database.JSONDatabase.all_keys>` (self)
* :ref:`moobius.database.json_database.JSONDatabase.__str__ <moobius.database.json_database.JSONDatabase.__str__>` (self)
* :ref:`moobius.database.json_database.JSONDatabase.__repr__ <moobius.database.json_database.JSONDatabase.__repr__>` (self)
* :ref:`moobius.database.json_database.JSONDatabase.all_keys.key_iterator <moobius.database.json_database.JSONDatabase.all_keys.key_iterator>` ()
* :ref:`moobius.database.null_database.NullDatabase.__init__ <moobius.database.null_database.NullDatabase.__init__>` (self, domain, \*kwargs)
* :ref:`moobius.database.null_database.NullDatabase.get_value <moobius.database.null_database.NullDatabase.get_value>` (self, key)
* :ref:`moobius.database.null_database.NullDatabase.set_value <moobius.database.null_database.NullDatabase.set_value>` (self, key, value)
* :ref:`moobius.database.null_database.NullDatabase.delete_key <moobius.database.null_database.NullDatabase.delete_key>` (self, key)
* :ref:`moobius.database.null_database.NullDatabase.all_keys <moobius.database.null_database.NullDatabase.all_keys>` (self)
* :ref:`moobius.database.null_database.NullDatabase.__str__ <moobius.database.null_database.NullDatabase.__str__>` (self)
* :ref:`moobius.database.null_database.NullDatabase.__repr__ <moobius.database.null_database.NullDatabase.__repr__>` (self)
* :ref:`moobius.database.redis_database.RedisDatabase.__init__ <moobius.database.redis_database.RedisDatabase.__init__>` (self, domain, host, port, db, password, \*kwargs)
* :ref:`moobius.database.redis_database.RedisDatabase.get_value <moobius.database.redis_database.RedisDatabase.get_value>` (self, key)
* :ref:`moobius.database.redis_database.RedisDatabase.set_value <moobius.database.redis_database.RedisDatabase.set_value>` (self, key, value)
* :ref:`moobius.database.redis_database.RedisDatabase.delete_key <moobius.database.redis_database.RedisDatabase.delete_key>` (self, key)
* :ref:`moobius.database.redis_database.RedisDatabase.all_keys <moobius.database.redis_database.RedisDatabase.all_keys>` (self)
* :ref:`moobius.database.redis_database.RedisDatabase.__str__ <moobius.database.redis_database.RedisDatabase.__str__>` (self)
* :ref:`moobius.database.redis_database.RedisDatabase.__repr__ <moobius.database.redis_database.RedisDatabase.__repr__>` (self)
* :ref:`moobius.database.storage.get_engine <moobius.database.storage.get_engine>` (implementation)
* :ref:`moobius.database.storage.get_engine._hit <moobius.database.storage.get_engine._hit>` (matches)
* :ref:`moobius.database.storage.CachedDict.__init__ <moobius.database.storage.CachedDict.__init__>` (self, database, strict_mode)
* :ref:`moobius.database.storage.CachedDict.load <moobius.database.storage.CachedDict.load>` (self)
* :ref:`moobius.database.storage.CachedDict.save <moobius.database.storage.CachedDict.save>` (self, key)
* :ref:`moobius.database.storage.CachedDict.__getitem__ <moobius.database.storage.CachedDict.__getitem__>` (self, key)
* :ref:`moobius.database.storage.CachedDict.__setitem__ <moobius.database.storage.CachedDict.__setitem__>` (self, key, value)
* :ref:`moobius.database.storage.CachedDict.__delitem__ <moobius.database.storage.CachedDict.__delitem__>` (self, key)
* :ref:`moobius.database.storage.CachedDict.pop <moobius.database.storage.CachedDict.pop>` (self, key, default)
* :ref:`moobius.database.storage.CachedDict.clear <moobius.database.storage.CachedDict.clear>` (self)
* :ref:`moobius.database.storage.CachedDict.__str__ <moobius.database.storage.CachedDict.__str__>` (self)
* :ref:`moobius.database.storage.CachedDict.__repr__ <moobius.database.storage.CachedDict.__repr__>` (self)
* :ref:`moobius.database.storage.MoobiusStorage.__init__ <moobius.database.storage.MoobiusStorage.__init__>` (self, service_id, channel_id, db_config)
* :ref:`moobius.database.storage.MoobiusStorage.put <moobius.database.storage.MoobiusStorage.put>` (self, attr_name, database, load, clear)
* :ref:`moobius.database.storage.MoobiusStorage.add_container <moobius.database.storage.MoobiusStorage.add_container>` (self, implementation, settings, name, load, clear)
* :ref:`moobius.database.storage.MoobiusStorage.__str__ <moobius.database.storage.MoobiusStorage.__str__>` (self)
* :ref:`moobius.database.storage.MoobiusStorage.__repr__ <moobius.database.storage.MoobiusStorage.__repr__>` (self)
* :ref:`moobius.network.asserts.types_assert <moobius.network.asserts.types_assert>` (ty, \*kwargs)
* :ref:`moobius.network.asserts.structure_assert <moobius.network.asserts.structure_assert>` (gold, green, base_message, path)
* :ref:`moobius.network.asserts.min_subset_dict <moobius.network.asserts.min_subset_dict>` (min_keys, dtemplate)
* :ref:`moobius.network.asserts.temp_modify <moobius.network.asserts.temp_modify>` (socket_request)
* :ref:`moobius.network.asserts._style_check <moobius.network.asserts._style_check>` (style_element, base_message, path)
* :ref:`moobius.network.asserts._context_menu_item_check <moobius.network.asserts._context_menu_item_check>` (cmenu_item, base_message, path)
* :ref:`moobius.network.asserts._socket_update_body_assert <moobius.network.asserts._socket_update_body_assert>` (b, base_message, path)
* :ref:`moobius.network.asserts._socket_message_body_assert1 <moobius.network.asserts._socket_message_body_assert1>` (b, base_message, path, is_up)
* :ref:`moobius.network.asserts._button_click_body_assert <moobius.network.asserts._button_click_body_assert>` (b, base_message, path)
* :ref:`moobius.network.asserts._context_menuclick_body_assert <moobius.network.asserts._context_menuclick_body_assert>` (b, base_message, path)
* :ref:`moobius.network.asserts._action_body_assert <moobius.network.asserts._action_body_assert>` (b, base_message, path)
* :ref:`moobius.network.asserts.socket_assert <moobius.network.asserts.socket_assert>` (x)
* :ref:`moobius.network.asserts.min_subset_dict.t_fn <moobius.network.asserts.min_subset_dict.t_fn>` (d, base_message, path)
* :ref:`moobius.network.asserts._socket_update_body_assert._each_button <moobius.network.asserts._socket_update_body_assert._each_button>` (x, base_message, the_path)
* :ref:`moobius.network.http_api_wrapper.get_or_post <moobius.network.http_api_wrapper.get_or_post>` (url, is_post, requests_kwargs, raise_json_decode_errors)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.__init__ <moobius.network.http_api_wrapper.HTTPAPIWrapper.__init__>` (self, http_server_uri, email, password)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper._checked_get_or_post <moobius.network.http_api_wrapper.HTTPAPIWrapper._checked_get_or_post>` (self, url, the_request, is_post, requests_kwargs, good_message, bad_message, raise_errors)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.checked_get <moobius.network.http_api_wrapper.HTTPAPIWrapper.checked_get>` (self, url, the_request, requests_kwargs, good_message, bad_message, raise_errors)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.checked_post <moobius.network.http_api_wrapper.HTTPAPIWrapper.checked_post>` (self, url, the_request, requests_kwargs, good_message, bad_message, raise_errors)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.headers <moobius.network.http_api_wrapper.HTTPAPIWrapper.headers>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.authenticate <moobius.network.http_api_wrapper.HTTPAPIWrapper.authenticate>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.sign_up <moobius.network.http_api_wrapper.HTTPAPIWrapper.sign_up>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.sign_out <moobius.network.http_api_wrapper.HTTPAPIWrapper.sign_out>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.refresh <moobius.network.http_api_wrapper.HTTPAPIWrapper.refresh>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper._xtract_character <moobius.network.http_api_wrapper.HTTPAPIWrapper._xtract_character>` (self, resp_data)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_member_profile <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_member_profile>` (self, character_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_member_ids <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_member_ids>` (self, channel_id, service_id, raise_empty_list_err)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_puppets <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_puppets>` (self, service_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_user_info <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_user_info>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.update_current_user <moobius.network.http_api_wrapper.HTTPAPIWrapper.update_current_user>` (self, avatar, description, name)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.create_service <moobius.network.http_api_wrapper.HTTPAPIWrapper.create_service>` (self, description)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_service_id_list <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_service_id_list>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.create_puppet <moobius.network.http_api_wrapper.HTTPAPIWrapper.create_puppet>` (self, service_id, name, avatar, description)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.update_character <moobius.network.http_api_wrapper.HTTPAPIWrapper.update_character>` (self, service_id, character_id, avatar, description, name)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.create_channel <moobius.network.http_api_wrapper.HTTPAPIWrapper.create_channel>` (self, channel_name, channel_desc)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.bind_service_to_channel <moobius.network.http_api_wrapper.HTTPAPIWrapper.bind_service_to_channel>` (self, service_id, channel_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.unbind_service_from_channel <moobius.network.http_api_wrapper.HTTPAPIWrapper.unbind_service_from_channel>` (self, service_id, channel_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.update_channel <moobius.network.http_api_wrapper.HTTPAPIWrapper.update_channel>` (self, channel_id, channel_name, channel_desc)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_popular_channels <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_popular_channels>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_list <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_list>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_message_history <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_message_history>` (self, channel_id, limit, before)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.this_user_channels <moobius.network.http_api_wrapper.HTTPAPIWrapper.this_user_channels>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper._upload_extension <moobius.network.http_api_wrapper.HTTPAPIWrapper._upload_extension>` (self, extension)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper._do_upload_file <moobius.network.http_api_wrapper.HTTPAPIWrapper._do_upload_file>` (self, upload_url, upload_fields, file_path)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.upload_file <moobius.network.http_api_wrapper.HTTPAPIWrapper.upload_file>` (self, file_path)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.convert_to_url <moobius.network.http_api_wrapper.HTTPAPIWrapper.convert_to_url>` (self, file_path)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.download_file <moobius.network.http_api_wrapper.HTTPAPIWrapper.download_file>` (self, url, filename, assert_no_overwrite, headers)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_group_dict <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_group_dict>` (self, channel_id, service_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_group_list <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_group_list>` (self, channel_id, service_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.create_channel_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.create_channel_group>` (self, channel_id, group_name, character_ids)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.character_ids_of_service_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.character_ids_of_service_group>` (self, group_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.character_ids_of_channel_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.character_ids_of_channel_group>` (self, sender_id, channel_id, group_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.create_service_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.create_service_group>` (self, character_ids)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.update_channel_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.update_channel_group>` (self, channel_id, group_id, members)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.update_temp_channel_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.update_temp_channel_group>` (self, channel_id, members)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_temp_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_channel_temp_group>` (self, channel_id, service_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_user_from_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_user_from_group>` (self, user_id, channel_id, group_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_target_group <moobius.network.http_api_wrapper.HTTPAPIWrapper.fetch_target_group>` (self, user_id, channel_id, group_id)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.__str__ <moobius.network.http_api_wrapper.HTTPAPIWrapper.__str__>` (self)
* :ref:`moobius.network.http_api_wrapper.HTTPAPIWrapper.__repr__ <moobius.network.http_api_wrapper.HTTPAPIWrapper.__repr__>` (self)
* :ref:`moobius.network.ws_client.send_tweak <moobius.network.ws_client.send_tweak>` (the_message)
* :ref:`moobius.network.ws_client.time_out_wrap <moobius.network.ws_client.time_out_wrap>` (co_routine, timeout)
* :ref:`moobius.network.ws_client.WSClient.__init__ <moobius.network.ws_client.WSClient.__init__>` (self, ws_server_uri, on_connect, handle)
* :ref:`moobius.network.ws_client.WSClient.connect <moobius.network.ws_client.WSClient.connect>` (self)
* :ref:`moobius.network.ws_client.WSClient._queue_consume <moobius.network.ws_client.WSClient._queue_consume>` (self)
* :ref:`moobius.network.ws_client.WSClient.send <moobius.network.ws_client.WSClient.send>` (self, message)
* :ref:`moobius.network.ws_client.WSClient.receive <moobius.network.ws_client.WSClient.receive>` (self)
* :ref:`moobius.network.ws_client.WSClient.safe_handle <moobius.network.ws_client.WSClient.safe_handle>` (self, message)
* :ref:`moobius.network.ws_client.WSClient.heartbeat <moobius.network.ws_client.WSClient.heartbeat>` (self)
* :ref:`moobius.network.ws_client.WSClient.dumps <moobius.network.ws_client.WSClient.dumps>` (data)
* :ref:`moobius.network.ws_client.WSClient.service_login <moobius.network.ws_client.WSClient.service_login>` (self, service_id, access_token)
* :ref:`moobius.network.ws_client.WSClient.agent_login <moobius.network.ws_client.WSClient.agent_login>` (self, access_token)
* :ref:`moobius.network.ws_client.WSClient.leave_channel <moobius.network.ws_client.WSClient.leave_channel>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.join_channel <moobius.network.ws_client.WSClient.join_channel>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.update_character_list <moobius.network.ws_client.WSClient.update_character_list>` (self, service_id, channel_id, characters, recipients)
* :ref:`moobius.network.ws_client.WSClient.update_buttons <moobius.network.ws_client.WSClient.update_buttons>` (self, service_id, channel_id, buttons, recipients)
* :ref:`moobius.network.ws_client.WSClient.update_context_menu <moobius.network.ws_client.WSClient.update_context_menu>` (self, service_id, channel_id, menu_items, recipients)
* :ref:`moobius.network.ws_client.WSClient.update_style <moobius.network.ws_client.WSClient.update_style>` (self, service_id, channel_id, style_content, recipients)
* :ref:`moobius.network.ws_client.WSClient.update_channel_info <moobius.network.ws_client.WSClient.update_channel_info>` (self, service_id, channel_id, channel_info)
* :ref:`moobius.network.ws_client.WSClient.update_canvas <moobius.network.ws_client.WSClient.update_canvas>` (self, service_id, channel_id, canvas_elements, recipients)
* :ref:`moobius.network.ws_client.WSClient.update <moobius.network.ws_client.WSClient.update>` (self, service_id, target_client_id, data)
* :ref:`moobius.network.ws_client.WSClient.message_up <moobius.network.ws_client.WSClient.message_up>` (self, user_id, service_id, channel_id, recipients, subtype, content)
* :ref:`moobius.network.ws_client.WSClient.message_down <moobius.network.ws_client.WSClient.message_down>` (self, user_id, service_id, channel_id, recipients, subtype, content, sender)
* :ref:`moobius.network.ws_client.WSClient.fetch_characters <moobius.network.ws_client.WSClient.fetch_characters>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.fetch_buttons <moobius.network.ws_client.WSClient.fetch_buttons>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.fetch_style <moobius.network.ws_client.WSClient.fetch_style>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.fetch_canvas <moobius.network.ws_client.WSClient.fetch_canvas>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.fetch_channel_info <moobius.network.ws_client.WSClient.fetch_channel_info>` (self, user_id, channel_id)
* :ref:`moobius.network.ws_client.WSClient.__str__ <moobius.network.ws_client.WSClient.__str__>` (self)
* :ref:`moobius.network.ws_client.WSClient.__repr__ <moobius.network.ws_client.WSClient.__repr__>` (self)
* :ref:`moobius.network.ws_client.WSClient.__init__._default_on_connect <moobius.network.ws_client.WSClient.__init__._default_on_connect>` (self)
* :ref:`moobius.network.ws_client.WSClient.__init__._default_handle <moobius.network.ws_client.WSClient.__init__._default_handle>` (self, message)
